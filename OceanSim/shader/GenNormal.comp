#version 410 core
//used to calculate height from h0 h0conj

const int LOCAL_WORK_GROUP_SIZE = 32;

const int L = 1000;
//const int N = 256;
const float PI = 3.14159265358979323;

layout(binding = 0 ,rg32f) uniform image2D imageHt;
layout(binding = 1 ,rg32f) uniform image2D imageNx;
layout(binding = 2 ,rg32f) uniform image2D imageNz;
uniform int N;

layout(local_size_x = LOCAL_WORK_GROUP_SIZE, local_size_y = LOCAL_WORK_GROUP_SIZE, local_size_z = 1) in;

// utilities
vec2 CompMul(vec2 c1, vec2 c2){
	float real = c1.x*c2.x-c1.y*c2.y;
	float img = c1.x*c2.y+c1.y*c2.x;
	return vec2(real,img);
}

void main()
{
	ivec2 storeLoc = ivec2(int(gl_GlobalInvocationID.x), int(gl_GlobalInvocationID.y));
	
	// first get k
	vec2 k = vec2(2*PI*(storeLoc.x - N / 2)/L, 2*PI*(storeLoc.y - N / 2)/L);

	// get h0 and h0conj
	vec2 ht = imageLoad(imageHt, storeLoc).xy;
	vec2 Nx = CompMul(vec2(0.0,k.x), ht);
	vec2 Nz = CompMul(vec2(0.0,k.y), ht);

	// store the result
	imageStore(imageNx, storeLoc, vec4(Nx, 0.0, 0.0));
	imageStore(imageNz, storeLoc, vec4(Nz, 0.0, 0.0));

}